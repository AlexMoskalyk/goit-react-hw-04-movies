{"version":3,"sources":["Components/actor/Actor.js","Components/cast/Cast.js"],"names":["Actor","actors","map","actor","src","profile_path","imageNotPhoto","alt","original_name","character","id","Cast","movieId","useParams","useState","setActors","useEffect","fetchCastByMovieId","then","catch","error","console","log"],"mappings":"yIA6BeA,EAzBD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACf,OACE,mCACGA,EAAOC,KAAI,SAACC,GAAD,OACV,+BACE,qBACEC,IACyB,OAAvBD,EAAME,aACFC,IADJ,yCAEsCH,EAAME,cAE9CE,IAAKJ,EAAMK,gBAEb,4BAAIL,EAAMK,gBACV,4BAAIL,EAAMM,cAVHN,EAAMO,U,QCYRC,UAdF,WACX,IAAQC,EAAYC,cAAZD,QAER,EAA4BE,mBAAS,IAArC,mBAAOb,EAAP,KAAec,EAAf,KAQA,OANAC,qBAAU,WACRC,YAAmBL,GAChBM,KAAKH,GACLI,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACR,IAEG,cAAC,EAAD,CAAOX,OAAQA","file":"static/js/7.9fe564c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport imageNotPhoto from \"../../assets/images/placeholder.png\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Actor = ({ actors }) => {\r\n  return (\r\n    <>\r\n      {actors.map((actor) => (\r\n        <li key={actor.id}>\r\n          <img\r\n            src={\r\n              actor.profile_path === null\r\n                ? imageNotPhoto\r\n                : `https://image.tmdb.org/t/p/w200${actor.profile_path}`\r\n            }\r\n            alt={actor.original_name}\r\n          />\r\n          <p>{actor.original_name}</p>\r\n          <p>{actor.character}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  actors: PropTypes.array,\r\n};\r\n\r\nexport default Actor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport Actor from \"../actor/Actor\";\r\nimport { fetchCastByMovieId } from \"../services/API\";\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [actors, setActors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCastByMovieId(movieId)\r\n      .then(setActors)\r\n      .catch((error) => console.log(error));\r\n  }, [movieId]);\r\n\r\n  return <Actor actors={actors} />;\r\n};\r\n\r\nexport default Cast;\r\n"],"sourceRoot":""}