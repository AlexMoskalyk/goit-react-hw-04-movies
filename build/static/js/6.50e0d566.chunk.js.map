{"version":3,"sources":["Components/services/API.js","Components/moviesList/MoviesList.js","Components/searchBar/SearchBar.module.css","Components/searchBar/SearchBar.js","pages/MoviesPage.js"],"names":["BASE_APIKEY","BASE_URL","fetchTopMovie","fetch","then","response","json","fetchMovieByQuery","query","axios","get","res","data","results","fetchMovieById","movieId","fetchCastByMovieId","cast","fetchRewiewsById","MoviesList","movies","location","useLocation","map","movie","to","pathname","id","state","from","title","module","exports","SearchBar","onSubmit","useState","setQuery","e","preventDefault","className","styles","form","type","value","name","onChange","target","MoviesPage","history","useHistory","setMovies","prevQuery","search","slice","useEffect","api","push"],"mappings":"yFAAA,+LAEMA,EAAc,mCACdC,EAAW,8BAEJC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,yCAA6CD,IAAeI,MACtE,SAACC,GAAD,OAAcA,EAASC,WAIdC,EAAoB,SAACC,GAChC,OAAOC,IACJC,IADI,UAEAT,EAFA,kCAEkCD,EAFlC,iCAEsEQ,IAE1EJ,MAAK,SAACO,GAAD,OAASA,EAAIC,KAAKC,YAGfC,EAAiB,SAACC,GAC7B,OAAOZ,MAAM,KAAD,OACZF,EADY,mBACOc,EADP,oBAC0Bf,EAD1B,oBACwDI,MAClE,SAACC,GAAD,OAAcA,EAASC,WAIdU,EAAqB,SAACD,GACjC,OAAOZ,MAAM,GAAD,OACPF,EADO,mBACYc,EADZ,4BACuCf,EADvC,oBAGTI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACQ,GAAD,OAAUA,EAAKK,SAGZC,EAAmB,SAACH,GAC/B,OAAOZ,MAAM,GAAD,OACPF,EADO,mBACYc,EADZ,4BACuCf,EADvC,oBAGTI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACQ,GAAD,OAAUA,EAAKC,a,gCCvCzB,+BAyBeM,IArBI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAWC,cACjB,OACE,6BACGF,EAAOG,KAAI,SAACC,GAAD,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,IADxD,SAGGG,EAAMM,SAJFN,EAAMG,W,mBCRvBI,EAAOC,QAAU,CAAC,KAAO,0B,iGC4BVC,EAzBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA0BC,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4B,EAAd,KAaA,OACE,uBAAMF,SAPe,SAACG,GACtBA,EAAEC,iBACFJ,EAAS1B,GACT4B,EAAS,KAIuBG,UAAWC,IAAOC,KAAlD,UACE,uBAAOC,KAAK,OAAOC,MAAOnC,EAAOoC,KAAK,QAAQC,SAb3B,SAACR,GACtB,IAAMM,EAAQN,EAAES,OAAOH,MAEvBP,EAASO,MAWP,wBAAQD,KAAK,SAAb,wB,QCaSK,UA3BI,WACjB,IAAMC,EAAUC,cAEhB,EAA0Bd,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOf,EAAP,KAAe8B,EAAf,KAGMC,EAFaH,EAAQ3B,SAAnB+B,OAEiBC,MAAM,GAE/BC,qBAAU,YACPH,GAAa3C,IACZ+C,IAAsB/C,GAAS2C,GAAW/C,KAAK8C,KAChD,CAAC1C,EAAO2C,IAOX,OACE,qCACE,cAAC,EAAD,CAAWjB,SAPa,SAAC1B,GAC3B4B,EAAS5B,GACTwC,EAAQQ,KAAK,CAAEJ,OAAO,SAAD,OAAW5C,QAM9B,cAACW,EAAA,EAAD,CAAYC,OAAQA","file":"static/js/6.50e0d566.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_APIKEY = \"29b7e9d285ace32db2cbe7db3dfec46d\";\r\nconst BASE_URL = \"https://api.themoviedb.org/\";\r\n\r\nexport const fetchTopMovie = () => {\r\n  return fetch(`${BASE_URL}3/trending/movie/week?api_key=${BASE_APIKEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n};\r\n\r\nexport const fetchMovieByQuery = (query) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}3/search/movie?api_key=${BASE_APIKEY}&language=en-US&query=${query}`\r\n    )\r\n    .then((res) => res.data.results);\r\n};\r\n\r\nexport const fetchMovieById = (movieId) => {\r\n  return fetch(`\r\n${BASE_URL}3/movie/${movieId}?api_key=${BASE_APIKEY}&language=en-US`).then(\r\n    (response) => response.json()\r\n  );\r\n};\r\n\r\nexport const fetchCastByMovieId = (movieId) => {\r\n  return fetch(\r\n    `${BASE_URL}3/movie/${movieId}/credits?api_key=${BASE_APIKEY}&language=en-US`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data.cast);\r\n};\r\n\r\nexport const fetchRewiewsById = (movieId) => {\r\n  return fetch(\r\n    `${BASE_URL}3/movie/${movieId}/reviews?api_key=${BASE_APIKEY}&language=en-US`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data.results);\r\n};\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id}>\r\n          <Link\r\n            to={{ pathname: `/movies/${movie.id}`, state: { from: location } }}\r\n          >\r\n            {movie.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport default MoviesList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchBar_form__2uv1K\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const onHandleChange = (e) => {\r\n    const value = e.target.value;\r\n\r\n    setQuery(value);\r\n  };\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onHandleSubmit} className={styles.form}>\r\n      <input type=\"text\" value={query} name=\"query\" onChange={onHandleChange} />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n// import { useRouteMatch } from \"react-router\";\r\nimport MoviesList from \"../Components/moviesList/MoviesList\";\r\nimport SearchBar from \"../Components/searchBar/SearchBar\";\r\nimport * as api from \"../Components/services/API\";\r\n\r\nconst MoviesPage = () => {\r\n  const history = useHistory();\r\n  // const match = useRouteMatch();\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const { search } = history.location;\r\n\r\n  const prevQuery = search.slice(7);\r\n\r\n  useEffect(() => {\r\n    (prevQuery || query) &&\r\n      api.fetchMovieByQuery(query || prevQuery).then(setMovies);\r\n  }, [query, prevQuery]);\r\n\r\n  const onHandleQuerySubmit = (query) => {\r\n    setQuery(query);\r\n    history.push({ search: `query=${query}` });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={onHandleQuerySubmit} />\r\n      <MoviesList movies={movies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}